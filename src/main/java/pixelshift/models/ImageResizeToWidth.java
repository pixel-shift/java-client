/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package pixelshift.models;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Resize the image to a specific width. Height will depend on aspect ratio of
 * image.
 */
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "kind")
@JsonTypeName("Image_ResizeToWidth")
public class ImageResizeToWidth extends TransformUnit {
    /**
     * The width property.
     */
    @JsonProperty(value = "width", required = true)
    private int width;

    /**
     * The resampling algorithm used for resizing. Possible values include:
     * 'lanczos3', 'lanczos2', 'cubic', 'nearest'.
     */
    @JsonProperty(value = "resizeKernel")
    private ResizeKernel resizeKernel;

    /**
     * Get the width value.
     *
     * @return the width value
     */
    public int width() {
        return this.width;
    }

    /**
     * Set the width value.
     *
     * @param width the width value to set
     * @return the ImageResizeToWidth object itself.
     */
    public ImageResizeToWidth withWidth(int width) {
        this.width = width;
        return this;
    }

    /**
     * Get the resampling algorithm used for resizing. Possible values include: 'lanczos3', 'lanczos2', 'cubic', 'nearest'.
     *
     * @return the resizeKernel value
     */
    public ResizeKernel resizeKernel() {
        return this.resizeKernel;
    }

    /**
     * Set the resampling algorithm used for resizing. Possible values include: 'lanczos3', 'lanczos2', 'cubic', 'nearest'.
     *
     * @param resizeKernel the resizeKernel value to set
     * @return the ImageResizeToWidth object itself.
     */
    public ImageResizeToWidth withResizeKernel(ResizeKernel resizeKernel) {
        this.resizeKernel = resizeKernel;
        return this;
    }

}
